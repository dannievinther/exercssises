---
import { Sprite } from "astro-icon";
import HintList from "./HintList.astro";
const { hints } = Astro.props;

const types = [...new Set(hints.map((h) => h.type))];
function getHints(type) {
  return hints.filter((hint) => hint.type === type);
}
---

<details>
  <summary>
    Hints
    <Sprite name="chevron-down" width="16" height="16" aria-hidden="true" />
  </summary>
  {types.map((type) => <HintList hints={getHints(type)} />)}
</details>

<style lang="scss">
  :global([data-no-hints]) {
    text-transform: uppercase;
    font-family: "Mona Sans", system-ui;
    font-size: 0.7em;
    font-weight: 600;
    color: var(--gray-600);
    padding: 0.45rem var(--space-4) var(--space-1);
    border-radius: var(--bdrs-md);
    border: 2px solid var(--gray-200);
    width: max-content;
    letter-spacing: 0.05em;
  }

  details {
    display: inline-grid;
  }

  details[open] summary {
    border-radius: var(--bdrs-l) var(--bdrs-l) 0 0;
    svg {
      transform: rotate3d(0, 0, 1, -180deg);
    }
  }

  [astro-icon="chevron-down"] {
    stroke-width: 3px;
  }

  summary {
    padding: var(--space-3);
    background: #e9eef4;
    border-radius: var(--bdrs-l);
    color: var(--ui-accent);
    inline-size: max-content;
    text-transform: uppercase;
    font-variation-settings: "wdth" 120;
    font-family: "Mona Sans", system-ui;
    font-size: 0.7em;
    font-weight: 700;
    cursor: pointer;
    user-select: none;
    touch-action: manipulation;
    letter-spacing: 0.05em;
    text-decoration: underline 0.25em var(--blue-500);
    text-underline-offset: 0.125em;

    display: flex;
    gap: 0.3ch;
  }

  [astro-icon] {
    transition: 0.2s cubic-bezier(0.1, 0, 0.1, 1);
    :global(path) {
      stroke-width: 3px;
    }
  }
  summary::-webkit-details-marker {
    display: none;
  }
</style>
