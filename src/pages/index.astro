---
import "/src/style/global.scss";
import Head from "../components/Head.astro";
import Footer from "../components/Footer.astro";
---

<html lang="da">
  <head>
    <Head title="Vinther Codes" />
  </head>
  <body>
    <!-- <div class="front"> -->
    <svg
      aria-hidden="true"
      viewBox="20 20 170 170"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        opacity=".05"
        fill="#81F4E1"
        d="M31,-43.1C44.1,-33.2,61.2,-29.3,70.5,-18.7C79.7,-8,81.1,9.4,74.2,22.1C67.2,34.8,52,42.7,38.3,53C24.6,63.3,12.3,75.9,-3.3,80.5C-18.9,85,-37.8,81.5,-50.3,70.8C-62.8,60.1,-68.8,42.2,-72.3,25C-75.7,7.9,-76.5,-8.6,-70.6,-21.7C-64.7,-34.8,-52,-44.5,-39.1,-54.4C-26.3,-64.3,-13.1,-74.4,-2.1,-71.6C9,-68.7,18,-52.9,31,-43.1Z"
        transform="translate(100 100)"></path>
    </svg>
    <main>
      <h1 aria-label="CSS exercises">
        Exer<span class="stroke-text">CSS</span>ises
      </h1>
      <ul class="inline-list">
        <li><a href="/grid">Grid exercises</a></li>
        <li>
          <a href="/flex">Flexbox exercises</a>
        </li>
      </ul>
    </main>

    <Footer />
    <!-- </div> -->
    <style lang="scss">
      h1 {
        font-family: "Mona Sans", system-ui;
        font-weight: 900;
        text-transform: uppercase;
        font-size: 4rem;
        --min-font: 40;
        --max-font: 64;
        font-size: clamp(
          var(--min-font) * 1px,
          var(--responsive),
          var(--max-font) * 1px
        );
        line-height: 1.125;
        cursor: pointer;
        justify-self: center;
        -webkit-user-select: none;
        user-select: none;
        // background: #2a2139;
        // background: #141330;
        // background: var(--blue-900);
        will-change: transform;
        padding-inline: var(--space-5);
        border-radius: 8px;
        transform-origin: 0 0;
        // transition: 0.1s cubic-bezier(0.5, 0, 0.5, 1);
        pointer-events: auto;
        position: relative;
        color: #fff;
      }

      .stroke-text {
        // --c: #72f1b8;
        // color: var(--c, #72f1b8);
        // --c: var(--primary);
        // color: var(--c, #82f4e1);
        color: var(--c, var(--blue-500));
        -webkit-text-fill-color: transparent;
        -webkit-text-stroke: 2px currentColor;
        overflow: hidden;
        // max-width: 3.1ch;
        max-width: 3.41ch;
        display: inline-block;
        vertical-align: bottom;
        text-decoration: underline var(--c) 4px;
        text-underline-offset: 4px;
        transition: 0.3s cubic-bezier(0.1, 0, 0.1, 1);
        transition-property: max-width, color;
        will-change: max-width;
        contain: paint;
      }

      .toggled {
        // --c: var(--ui-secondary);
        --c: #fff;
        // max-width: 1.05ch;
        max-width: 1.225ch;
      }

      svg path {
        fill: currentColor;
        opacity: 1;
      }

      body {
        display: grid;
        place-items: center;
        grid-template-rows: 1fr auto;
        min-height: 100vh;
        min-height: 100dvh;
        overflow: hidden;
        background: var(--blue-900);
      }

      body::before {
        z-index: 1;
        pointer-events: none;
        position: absolute;
        inset: 0;
        opacity: 0.8;
        mix-blend-mode: overlay;
        content: "";
        filter: contrast(125%);
        background-image: url(assets/svg/noise.svg);
        background-size: 500px;
      }

      svg,
      main {
        grid-area: 1 / 1;
      }
      svg:not(main > *) {
        max-inline-size: 30rem;
        padding: 2rem;
        transform: translateX(calc(-30px * var(--x)))
          translateY(calc(-30px * var(--y)));
        transition: transform 0.1s;
        color: #6328da;
        filter: blur(60px);
        mix-blend-mode: color;
        opacity: 0.4;
      }

      main {
        display: grid;
        grid: initial;
        gap: 2rem;
        transform: translateX(calc(-10px * var(--x)))
          translateY(calc(-10px * var(--y)));
        transition: transform 0.1s;
      }

      a:any-link {
        color: #72f1b8;
        text-decoration: none;
        /* touch-action: manipulation; */
        color: var(--blue-500);
        font-weight: 500;
        font-family: "Mona Sans", system-ui;
        font-size: 1.2rem;
        font-weight: 600;
        font-variation-settings: "wdth" 100, "wght" 600;
        font-family: "Mona Sans", system-ui;
        font-size: 1.2rem;
        transition: 0.2s font-variation-settings;
      }

      a:is(:hover, :focus-visible) {
        text-decoration: underline 0.05em;
        text-decoration-color: #fff;
        text-underline-offset: 0.1em;
        font-variation-settings: "wdth" 120, "wght" 900;
      }

      p {
        color: #fff;
        text-align: center;
        transform: translateX(calc(-10px * var(--x)))
          translateY(calc(-5px * var(--y)));
        transition: transform 0.1s;
      }
      .logo {
        inline-size: clamp(300px, 50vw, 600px);
      }
      .inline-list {
        display: inline-block; /* 1 */
        padding: 0; /* 2 */
        line-height: 2em;
        text-align: center;
      }

      .inline-list > li {
        display: inline; /* 3 */
      }

      .inline-list > li::after {
        content: " "; /* 4 */
        letter-spacing: 1em; /* 5 */
        background: linear-gradient(
          90deg,
          transparent calc(50% - 0.03125em),
          #fff 0,
          #fff calc(50% + 0.03125em),
          transparent 0
        ); /* 6 */
      }
    </style>

    <script>
      const heading = document.querySelector("h1");
      heading.addEventListener("click", () => {
        const span = heading.querySelector("span");
        span.classList.toggle("toggled");
      });
    </script>

    <script is:inline>
      const root = document.documentElement;

      let raf, x, y;

      document.addEventListener("pointermove", (e) => {
        x = (e.x / window.innerWidth - 0.5) * 2;
        y = (e.y / window.innerWidth - 0.5) * 2;
        raf = raf || requestAnimationFrame(update);
      });

      function update() {
        root.style.setProperty("--x", x);
        root.style.setProperty("--y", y);
        raf = null;
      }
    </script>
  </body>
</html>
